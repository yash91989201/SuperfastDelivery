type AddonStock {
  id: ID!

  addon_id: ID!

  quantity: Int!

  restock_qty: Int!

  updated_at: DateTime!
}

enum AddressAlias {
  HOME

  WORK

  HOTEL

  OTHER
}

type AddressDetail {
  id: String!

  route: String!

  town: String!

  postal_code: String!

  district: String!

  state: String!

  country: String!

  plus_code: String!

  place_id: String!

  formatted_address: String!

  latitude: Float!

  longitude: Float!

  address_id: String!
}

type Auth {
  id: String!

  email: String

  email_verified: Boolean!

  phone: String

  auth_role: AuthRole!

  created_at: DateTime!

  updated_at: DateTime!

  deleted_at: DateTime
}

enum AuthRole {
  CUSTOMER

  DELIVERY_PARTNER

  VENDOR

  ADMIN
}

input CreateAddonStockInput {
  addon_id: ID!

  quantity: Int!
}

input CreateDeliveryAddressInput {
  receiver_name: String!

  receiver_phone: String!

  address_alias: AddressAlias!

  other_alias: String

  latitude: Float!

  longitude: Float!

  address: String!

  nearby_landmark: String

  delivery_instruction: String

  is_default: Boolean!

  auth_id: String!
}

input CreateItemAddonInput {
  addon_name: String!

  addon_price: Float!

  image_url: String

  description: String

  item_id: ID!
}

input CreateItemStockInput {
  item_id: ID!

  quantity: Int!
}

input CreateItemVariantInput {
  variant_name: String!

  relative_pricing: Boolean!

  relative_price: Float!

  price: Float!

  image_url: String

  description: String

  item_id: ID!
}

input CreateMedicineCategoryInput {
  category_name: String!

  image_url: String

  shop_id: String!
}

input CreateMedicineItemInput {
  name: String!

  price: Float!

  image_url: String

  description: String

  category_id: String!
}

input CreateMenuItemInput {
  name: String!

  price: Float!

  image_url: String

  description: String

  menu_id: ID!
}

input CreateProfileInput {
  name: String!

  image_url: String

  dob: Date

  anniversary: Date

  gender: Gender

  auth_id: String!
}

input CreateRestaurantMenuInput {
  menu_name: String!

  image_url: String

  shop_id: String!
}

input CreateRetailCategoryInput {
  category_name: String!

  image_url: String

  shop_id: String!
}

input CreateRetailItemInput {
  name: String!

  price: Float!

  image_url: String

  description: String

  category_id: String!
}

input CreateShopAddressInput {
  longitude: Float!

  latitude: Float!

  address: String!

  nearby_landmark: String!
}

input CreateShopContactInput {
  name: String!

  phone_number: String!

  email: String!
}

input CreateShopImageInput {
  image_url: String!

  description: String!
}

input CreateShopInput {
  name: String!

  shop_type: ShopType!

  shop_status: ShopStatus!

  owner_auth_id: ID!

  address: CreateShopAddressInput!

  contact: CreateShopContactInput!

  images: [CreateShopImageInput!]

  timings: [CreateShopTimingInput!]
}

type CreateShopOutput {
  id: ID!

  message: String!
}

input CreateShopTimingInput {
  day: DayOfWeek!

  opens_at: Time!

  closes_at: Time!
}

input CreateVariantStockInput {
  variant_id: ID!

  quantity: Int!
}

scalar Date

scalar DateTime

enum DayOfWeek {
  MONDAY

  TUESDAY

  WEDNESDAY

  THURSDAY

  FRIDAY

  SATURDAY

  SUNDAY
}

input DeleteItemAddonInput {
  item_id: ID!

  addon_id: ID!
}

input DeleteItemVariantInput {
  item_id: ID!

  variant_id: ID!
}

type DeleteOutput {
  message: String!
}

type DeliveryAddress {
  id: String!

  receiver_name: String!

  receiver_phone: String!

  address_alias: AddressAlias!

  other_alias: String

  latitude: Float!

  longitude: Float!

  address: String!

  nearby_landmark: String

  delivery_instruction: String

  is_default: Boolean!

  auth_id: String!

  created_at: DateTime!

  updated_at: DateTime!
}

enum Gender {
  MALE

  FEMALE

  OTHERS

  UNDISCLOSED
}

input GetAuthByIdInput {
  id: String!
}

input GetAuthInput {
  email: String

  phone: String
}

input GetItemAddonInput {
  item_id: ID!

  addon_id: ID!
}

input GetItemVariantInput {
  item_id: ID!

  variant_id: ID!
}

input GetProfileInput {
  auth_id: String!
}

type ItemAddon {
  id: ID!

  addon_name: String!

  addon_price: Float!

  image_url: String

  description: String

  item_id: String!
}

type ItemStock {
  id: ID!

  item_id: ID!

  quantity: Int!

  restock_qty: Int!

  updated_at: DateTime!
}

type ItemVariant {
  id: ID!

  variant_name: String!

  relative_pricing: Boolean!

  relative_price: Float!

  price: Float!

  image_url: String

  description: String

  item_id: String!
}

type LatLng {
  lat: Float!

  lng: Float!
}

input LatLngInput {
  lat: Float!

  lng: Float!
}

type ListDeliveryAddressOutput {
  delivery_address: [DeliveryAddress!]!
}

type ListItemAddonOutput {
  addons: [ItemAddon!]!

  total_addons: Int!
}

type ListItemVariantOutput {
  variants: [ItemVariant!]!

  total_variants: Int!
}

type ListMedicineCategoryOutput {
  medicine_category_list: [MedicineCategory!]!

  total_category: Int!
}

type ListMedicineItemOutput {
  medicine_items: [MedicineItem!]!

  total_items: Int!
}

type ListMenuItemOutput {
  menu_items: [MenuItem!]!

  total_items: Int!
}

type ListRestaurantMenuOutput {
  restaurant_menu_list: [RestaurantMenu!]!

  total_menu: Int!
}

type ListRetailCategoryOutput {
  retail_category_list: [RetailCategory!]!

  total_category: Int!
}

type ListRetailItemOutput {
  retail_items: [RetailItem!]!

  total_items: Int!
}

input ListShopsInput {
  name: String

  shop_type: ShopType

  shop_status: ShopStatus

  order_by: OrderBy

  limit: Int

  offset: Int
}

type ListShopsOutput {
  shops: [Shop!]!

  total: Int!
}

type MedicineCategory {
  id: ID!

  category_name: String!

  image_url: String

  shop_id: String!

  created_at: DateTime!

  updated_at: DateTime!

  deleted_at: DateTime
}

type MedicineItem {
  id: ID!

  name: String!

  price: Float!

  image_url: String

  description: String

  category_id: String!

  created_at: DateTime!

  updated_at: DateTime!

  deleted_at: DateTime
}

type MenuItem {
  id: ID!

  name: String!

  price: Float!

  image_url: String

  description: String

  variants: [ItemVariant!]!

  addons: [ItemAddon!]!

  menu_id: String!

  created_at: DateTime!

  updated_at: DateTime!
}

type Mutation {
  SignInWithEmail(input: SignInWithEmailInput!): SignInOutput!

  SignInWithPhone(input: SignInWithPhoneInput!): SignInOutput!

  SignInWithGoogle(input: SignInWithGoogleInput!): SignInOutput!

  RefreshToken(sessionID: ID!): SignInOutput!

  LogOut(sessionID: ID!): SignInOutput!

  CreateProfile(input: CreateProfileInput!): Profile!

  CreateDeliveryAddress(input: CreateDeliveryAddressInput!): DeliveryAddress!

  UpdateProfile(input: UpdateProfileInput!): Profile!

  UpdateDeliveryAddress(input: UpdateDeliveryAddressInput!): DeliveryAddress!

  UpdateDefaultDeliveryAddress(input: UpdateDefaultDeliveryAddressInput!): UpdateOutput!

  DeleteDeliveryAddress(addressID: ID!): DeleteOutput!

  CreateShop(input: CreateShopInput!): Shop!

  UpdateShop(input: UpdateShopInput!): UpdateShopOutput!

  UpdateShopAddress(input: UpdateShopAddressInput!): UpdateShopOutput!

  UpdateShopContact(input: UpdateShopContactInput!): UpdateShopOutput!

  UpdateShopImages(input: [UpdateShopImageInput!]!): UpdateShopOutput!

  UpdateShopTimings(input: [UpdateShopTimingInput!]!): UpdateShopOutput!

  DeleteShop(id: ID!): UpdateShopOutput!

  CreateRestaurantMenu(input: CreateRestaurantMenuInput!): RestaurantMenu!

  CreateMenuItem(input: CreateMenuItemInput!): MenuItem!

  CreateMenuItemVariant(input: CreateItemVariantInput!): ItemVariant!

  CreateMenuItemAddon(input: CreateItemAddonInput!): ItemAddon!

  CreateRetailCategory(input: CreateRetailCategoryInput!): RetailCategory!

  CreateRetailItem(input: CreateRetailItemInput!): RetailItem!

  CreateRetailItemVariant(input: CreateItemVariantInput!): ItemVariant!

  CreateMedicineCategory(input: CreateMedicineCategoryInput!): MedicineCategory!

  CreateMedicineItem(input: CreateMedicineItemInput!): MedicineItem!

  UpdateRestaurantMenu(input: UpdateRestaurantMenuInput!): UpdateOutput!

  UpdateMenuItem(input: UpdateMenuItemInput!): UpdateOutput!

  UpdateMenuItemVariant(input: UpdateItemVariantInput!): UpdateOutput!

  UpdateMenuItemAddon(input: UpdateItemAddonInput!): UpdateOutput!

  UpdateRetailCategory(input: UpdateRetailCategoryInput!): UpdateOutput!

  UpdateRetailItem(input: UpdateRetailItemInput!): UpdateOutput!

  UpdateRetailItemVariant(input: UpdateItemVariantInput!): UpdateOutput!

  UpdateMedicineCategory(input: UpdateMedicineCategoryInput!): UpdateOutput!

  UpdateMedicineItem(input: UpdateMedicineItemInput!): UpdateOutput!

  DeleteRestaurantMenu(menuID: ID!): DeleteOutput!

  DeleteMenuItem(itemID: ID!): DeleteOutput!

  DeleteMenuItemVariant(input: DeleteItemVariantInput!): DeleteOutput!

  DeleteMenuItemAddon(input: DeleteItemAddonInput!): DeleteOutput!

  DeleteRetailCategory(categoryID: ID!): DeleteOutput!

  DeleteRetailItem(itemID: ID!): DeleteOutput!

  DeleteRetailItemVariant(input: DeleteItemVariantInput!): DeleteOutput!

  DeleteMedicineCategory(categoryID: ID!): DeleteOutput!

  DeleteMedicineItem(itemID: ID!): DeleteOutput!

  CreateItemStock(input: CreateItemStockInput!): ItemStock!

  CreateVariantStock(input: CreateVariantStockInput!): VariantStock!

  CreateAddonStock(input: CreateAddonStockInput!): AddonStock!

  UpdateItemStock(input: UpdateItemStockInput!): ItemStock!

  UpdateVariantStock(input: UpdateVariantStockInput!): VariantStock!

  UpdateAddonStock(input: UpdateAddonStockInput!): AddonStock!

  DeleteItemStock(id: ID!): DeleteOutput!

  DeleteVariantStock(id: ID!): DeleteOutput!

  DeleteAddonStock(id: ID!): DeleteOutput!
}

enum OrderBy {
  ASC

  DESC
}

type Profile {
  id: String!

  name: String!

  image_url: String

  dob: Date

  anniversary: Date

  gender: Gender

  auth_id: String!

  created_at: DateTime!

  updated_at: DateTime!
}

type Query {
  GetAuth(input: GetAuthInput!): Auth!

  GetAuthById(input: GetAuthByIdInput!): Auth!

  GetProfile(input: GetProfileInput!): Profile!

  GetDeliveryAddress(id: ID!): DeliveryAddress!

  GetDefaultDeliveryAddress(authID: ID!): DeliveryAddress!

  GetDeliveryAddressDetail(addressID: ID!): AddressDetail!

  ListDeliveryAddress(authID: ID!): ListDeliveryAddressOutput!

  GetShop(id: ID!): Shop!

  ListShops(input: ListShopsInput): ListShopsOutput!

  GetRestaurantMenu(id: ID!): RestaurantMenu!

  GetMenuItem(itemID: ID!): MenuItem!

  GetMenuItemVariant(input: GetItemVariantInput!): ItemVariant!

  GetMenuItemAddon(input: GetItemAddonInput!): ItemAddon!

  GetRetailCategory(id: ID!): RetailCategory!

  GetRetailItem(itemID: ID!): RetailItem!

  GetRetailItemVariant(input: GetItemVariantInput!): ItemVariant!

  GetMedicineCategory(id: ID!): MedicineCategory!

  GetMedicineItem(itemID: ID!): MedicineItem!

  ListRestaurantMenu(shopID: ID!): ListRestaurantMenuOutput!

  ListMenuItem(menuID: ID!): ListMenuItemOutput!

  ListMenuItemVariant(itemID: ID!): ListItemVariantOutput!

  ListMenuItemAddon(itemID: ID!): ListItemAddonOutput!

  ListRetailCategory(shopID: ID!): ListRetailCategoryOutput

  ListRetailItem(categoryID: ID!): ListRetailItemOutput!

  ListRetailItemVariant(itemID: ID!): ListItemVariantOutput!

  ListMedicineCategory(shopID: ID!): ListMedicineCategoryOutput

  ListMedicineItem(categoryID: ID!): ListMedicineItemOutput!

  GetItemStock(id: ID!): ItemStock!

  GetVariantStock(id: ID!): VariantStock!

  GetAddonStock(id: ID!): AddonStock!
}

type RestaurantMenu {
  id: ID!

  menu_name: String!

  image_url: String

  shop_id: String!

  created_at: DateTime!

  updated_at: DateTime!
}

type RetailCategory {
  id: ID!

  category_name: String!

  image_url: String

  shop_id: String!

  created_at: DateTime!

  updated_at: DateTime!
}

type RetailItem {
  id: ID!

  name: String!

  price: Float!

  image_url: String

  description: String

  category_id: String!

  variants: [ItemVariant!]!

  created_at: DateTime!

  updated_at: DateTime!
}

type Session {
  id: String!

  access_token: String!

  access_token_expires_at: DateTime!
}

type Shop {
  id: ID!

  name: String!

  shop_type: ShopType!

  shop_status: ShopStatus!

  owner_auth_id: ID!

  created_at: String!

  updated_at: String!

  deleted_at: String

  contact: ShopContact!

  address: ShopAddress!

  timings: [ShopTiming!]!

  images: [ShopImage!]!
}

type ShopAddress {
  id: ID!

  longitude: Float!

  latitude: Float!

  address: String!

  nearby_landmark: String!

  shop_id: ID!

  created_at: String!

  updated_at: String!
}

type ShopContact {
  id: ID!

  name: String!

  phone_number: String!

  email: String!

  shop_id: ID!

  created_at: String!
}

type ShopImage {
  id: ID!

  image_url: String!

  description: String!

  shop_id: ID!

  created_at: String!

  updated_at: String!
}

enum ShopStatus {
  OPEN

  CLOSED
}

type ShopTiming {
  id: ID!

  day: DayOfWeek!

  opens_at: Time!

  closes_at: Time!

  shop_id: ID!

  created_at: String!

  updated_at: String!
}

enum ShopType {
  RESTAURANT

  GROCERY

  PHARMACEUTICAL
}

type SignInOutput {
  auth: Auth

  profile: Profile

  session: Session

  create_profile: Boolean!

  verify_otp: Boolean!
}

input SignInWithEmailInput {
  email: String!

  auth_role: AuthRole!

  otp: String
}

input SignInWithGoogleInput {
  id_token: String!

  auth_role: AuthRole!
}

input SignInWithPhoneInput {
  phone: String!

  auth_role: AuthRole!

  otp: String
}

scalar Time

input UpdateAddonStockInput {
  id: ID!

  quantity: Int!

  restock_qty: Int!
}

input UpdateDefaultDeliveryAddressInput {
  delivery_address_id: String!

  auth_id: String!
}

input UpdateDeliveryAddressInput {
  receiver_name: String

  receiver_phone: String

  address_alias: AddressAlias

  other_alias: String

  latitude: Float

  longitude: Float

  nearby_landmark: String

  delivery_instruction: String

  is_default: Boolean!

  auth_id: String!
}

input UpdateItemAddonInput {
  id: ID!

  addon_name: String

  addon_price: Float

  image_url: String

  description: String

  item_id: String!
}

input UpdateItemStockInput {
  id: ID!

  quantity: Int!

  restock_qty: Int!
}

input UpdateItemVariantInput {
  id: ID!

  variant_name: String

  relative_pricing: Boolean

  relative_price: Float

  price: Float

  image_url: String

  description: String

  item_id: String!
}

input UpdateMedicineCategoryInput {
  id: ID!

  category_name: String

  image_url: String
}

input UpdateMedicineItemInput {
  id: ID!

  name: String

  price: Float

  image_url: String

  description: String
}

input UpdateMenuItemInput {
  id: ID!

  name: String

  price: Float

  image_url: String

  description: String
}

type UpdateOutput {
  message: String!
}

input UpdateProfileInput {
  id: String!

  name: String

  image_url: String

  dob: Date

  anniversary: Date

  gender: Gender

  auth_id: String!
}

input UpdateRestaurantMenuInput {
  id: ID!

  menu_name: String

  image_url: String
}

input UpdateRetailCategoryInput {
  id: ID!

  category_name: String

  image_url: String
}

input UpdateRetailItemInput {
  id: ID!

  name: String

  price: Float

  image_url: String

  description: String
}

input UpdateShopAddressInput {
  id: ID!

  address1: String

  address2: String

  location: LatLngInput

  nearby_landmark: String

  city: String

  state: String

  pincode: String

  country: String
}

input UpdateShopContactInput {
  id: ID!

  name: String

  phone_number: String

  email: String
}

input UpdateShopImageInput {
  id: ID!

  image_url: String

  description: String
}

input UpdateShopInput {
  id: ID!

  name: String

  shop_type: ShopType

  shop_status: ShopStatus
}

type UpdateShopOutput {
  message: String!
}

input UpdateShopTimingInput {
  id: ID!

  day: DayOfWeek

  opens_at: Time

  closes_at: Time
}

input UpdateVariantStockInput {
  id: ID!

  quantity: Int!

  restock_qty: Int!
}

type VariantStock {
  id: ID!

  variant_id: ID!

  quantity: Int!

  restock_qty: Int!

  updated_at: DateTime!
}

type __Directive {
  name: String!

  description: String

  locations: [__DirectiveLocation!]!

  args(includeDeprecated: Boolean = false): [__InputValue!]!

  isRepeatable: Boolean!
}

enum __DirectiveLocation {
  QUERY

  MUTATION

  SUBSCRIPTION

  FIELD

  FRAGMENT_DEFINITION

  FRAGMENT_SPREAD

  INLINE_FRAGMENT

  VARIABLE_DEFINITION

  SCHEMA

  SCALAR

  OBJECT

  FIELD_DEFINITION

  ARGUMENT_DEFINITION

  INTERFACE

  UNION

  ENUM

  ENUM_VALUE

  INPUT_OBJECT

  INPUT_FIELD_DEFINITION
}

type __EnumValue {
  name: String!

  description: String

  isDeprecated: Boolean!

  deprecationReason: String
}

type __Field {
  name: String!

  description: String

  args(includeDeprecated: Boolean = false): [__InputValue!]!

  type: __Type!

  isDeprecated: Boolean!

  deprecationReason: String
}

type __InputValue {
  name: String!

  description: String

  type: __Type!

  defaultValue: String

  isDeprecated: Boolean!

  deprecationReason: String
}

type __Schema {
  description: String

  types: [__Type!]!

  queryType: __Type!

  mutationType: __Type

  subscriptionType: __Type

  directives: [__Directive!]!
}

type __Type {
  kind: __TypeKind!

  name: String

  description: String

  fields(includeDeprecated: Boolean = false): [__Field!]

  interfaces: [__Type!]

  possibleTypes: [__Type!]

  enumValues(includeDeprecated: Boolean = false): [__EnumValue!]

  inputFields(includeDeprecated: Boolean = false): [__InputValue!]

  ofType: __Type

  specifiedByURL: String

  isOneOf: Boolean
}

enum __TypeKind {
  SCALAR

  OBJECT

  INTERFACE

  UNION

  ENUM

  INPUT_OBJECT

  LIST

  NON_NULL
}

"""
The @defer directive may be specified on a fragment spread to imply de-prioritization, that causes the fragment to be omitted in the initial response, and delivered as a subsequent response afterward. A query with @defer directive will cause the request to potentially return multiple responses, where non-deferred data is delivered in the initial response and data deferred delivered in a subsequent response. @include and @skip take precedence over @defer.
"""
directive @defer (if: Boolean = true, label: String) on FRAGMENT_SPREAD|INLINE_FRAGMENT

"""
The @deprecated built-in directive is used within the type system definition language to indicate deprecated portions of a GraphQL service's schema, such as deprecated fields on a type, arguments on a field, input fields on an input type, or values of an enum type.
"""
directive @deprecated (reason: String = "No longer supported") on FIELD_DEFINITION|ARGUMENT_DEFINITION|INPUT_FIELD_DEFINITION|ENUM_VALUE

"""
The @include directive may be provided for fields, fragment spreads, and inline fragments, and allows for conditional inclusion during execution as described by the if argument.
"""
directive @include (if: Boolean!) on FIELD|FRAGMENT_SPREAD|INLINE_FRAGMENT

"""
The `@oneOf` _built-in directive_ is used within the type system definition language to indicate an Input Object is a OneOf Input Object.
"""
directive @oneOf on INPUT_OBJECT

"""
The @skip directive may be provided for fields, fragment spreads, and inline fragments, and allows for conditional exclusion during execution as described by the if argument.
"""
directive @skip (if: Boolean!) on FIELD|FRAGMENT_SPREAD|INLINE_FRAGMENT

"""
The @specifiedBy built-in directive is used within the type system definition language to provide a scalar specification URL for specifying the behavior of custom scalar types.
"""
directive @specifiedBy (url: String!) on SCALAR

schema {
  query: Query
  mutation: Mutation
}
