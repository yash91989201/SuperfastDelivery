type Auth {
  id: String!

  email: String

  email_verified: Boolean!

  phone: String

  role: AuthRole!

  created_at: DateTime!

  updated_at: DateTime!

  deleted_at: DateTime
}

enum AuthRole {
  CUSTOMER

  DELIVERY_PARTNER

  VENDOR

  ADMIN
}

input CreateProfileInput {
  name: String!

  image_url: String

  dob: Date

  anniversary: Date

  gender: Gender

  auth_id: String!
}

scalar Date

scalar DateTime

enum Gender {
  MALE

  FEMALE

  OTHERS

  UNDISCLOSED
}

input GetAuthByIdInput {
  id: String!
}

input GetAuthInput {
  email: String

  phone: String
}

input GetProfileInput {
  auth_id: String!
}

type Mutation {
  SignInWithEmail(input: SignInWithEmailInput!): SignInOutput!

  SignInWithPhone(input: SignInWithPhoneInput!): SignInOutput!

  SignInWithGoogle(input: SignInWithGoogleInput!): SignInOutput!

  CreateProfile(input: CreateProfileInput!): Profile!

  UpdateProfile(input: UpdateProfileInput!): Profile!
}

type Profile {
  id: String!

  name: String!

  image_url: String

  dob: Date

  anniversary: Date

  gender: Gender

  auth_id: String!

  created_at: DateTime!

  updated_at: DateTime!
}

type Query {
  authById(input: GetAuthByIdInput!): Auth

  auth(input: GetAuthInput!): Auth

  profile(input: GetProfileInput!): Profile
}

type SignInOutput {
  auth: Auth

  profile: Profile

  create_profile: Boolean!

  verify_otp: Boolean!
}

input SignInWithEmailInput {
  email: String!

  otp: String
}

input SignInWithGoogleInput {
  id_token: String!
}

input SignInWithPhoneInput {
  phone: String!

  otp: String
}

input UpdateProfileInput {
  id: String

  name: String

  image_url: String

  dob: Date

  anniversary: Date

  gender: Gender

  auth_id: String!
}

type __Directive {
  name: String!

  description: String

  locations: [__DirectiveLocation!]!

  args: [__InputValue!]!

  isRepeatable: Boolean!
}

enum __DirectiveLocation {
  QUERY

  MUTATION

  SUBSCRIPTION

  FIELD

  FRAGMENT_DEFINITION

  FRAGMENT_SPREAD

  INLINE_FRAGMENT

  VARIABLE_DEFINITION

  SCHEMA

  SCALAR

  OBJECT

  FIELD_DEFINITION

  ARGUMENT_DEFINITION

  INTERFACE

  UNION

  ENUM

  ENUM_VALUE

  INPUT_OBJECT

  INPUT_FIELD_DEFINITION
}

type __EnumValue {
  name: String!

  description: String

  isDeprecated: Boolean!

  deprecationReason: String
}

type __Field {
  name: String!

  description: String

  args: [__InputValue!]!

  type: __Type!

  isDeprecated: Boolean!

  deprecationReason: String
}

type __InputValue {
  name: String!

  description: String

  type: __Type!

  defaultValue: String
}

type __Schema {
  description: String

  types: [__Type!]!

  queryType: __Type!

  mutationType: __Type

  subscriptionType: __Type

  directives: [__Directive!]!
}

type __Type {
  kind: __TypeKind!

  name: String

  description: String

  fields(includeDeprecated: Boolean = false): [__Field!]

  interfaces: [__Type!]

  possibleTypes: [__Type!]

  enumValues(includeDeprecated: Boolean = false): [__EnumValue!]

  inputFields: [__InputValue!]

  ofType: __Type

  specifiedByURL: String
}

enum __TypeKind {
  SCALAR

  OBJECT

  INTERFACE

  UNION

  ENUM

  INPUT_OBJECT

  LIST

  NON_NULL
}

"""
The @defer directive may be specified on a fragment spread to imply de-prioritization, that causes the fragment to be omitted in the initial response, and delivered as a subsequent response afterward. A query with @defer directive will cause the request to potentially return multiple responses, where non-deferred data is delivered in the initial response and data deferred delivered in a subsequent response. @include and @skip take precedence over @defer.
"""
directive @defer (if: Boolean = true, label: String) on FRAGMENT_SPREAD|INLINE_FRAGMENT

"""
The @deprecated built-in directive is used within the type system definition language to indicate deprecated portions of a GraphQL service's schema, such as deprecated fields on a type, arguments on a field, input fields on an input type, or values of an enum type.
"""
directive @deprecated (reason: String = "No longer supported") on FIELD_DEFINITION|ARGUMENT_DEFINITION|INPUT_FIELD_DEFINITION|ENUM_VALUE

"""
The @include directive may be provided for fields, fragment spreads, and inline fragments, and allows for conditional inclusion during execution as described by the if argument.
"""
directive @include (if: Boolean!) on FIELD|FRAGMENT_SPREAD|INLINE_FRAGMENT

"""
The @skip directive may be provided for fields, fragment spreads, and inline fragments, and allows for conditional exclusion during execution as described by the if argument.
"""
directive @skip (if: Boolean!) on FIELD|FRAGMENT_SPREAD|INLINE_FRAGMENT

"""
The @specifiedBy built-in directive is used within the type system definition language to provide a scalar specification URL for specifying the behavior of custom scalar types.
"""
directive @specifiedBy (url: String!) on SCALAR

schema {
  query: Query
  mutation: Mutation
}
